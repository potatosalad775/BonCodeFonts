name: Build and Release Fonts

on:
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        node-version: [20.x]
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      
    - name: Setup Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Verify source fonts
      run: |
        echo "Google Sans Code fonts:"
        ls -la sources/GoogleSansCodeVariable/
        echo "JetBrains Mono fonts:"
        ls -la sources/JetBrainsMonoVariable/
        echo "Sarasa Fixed K fonts:"  
        ls -la sources/SarasaFixedK/
    
    - name: Build fonts
      run: |
        npm run build:google-sans-variable
        npm run build:jetbrains-mono-variable
    
    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: boncode-fonts-${{ github.sha }}
        path: |
          out/GoogleSansCodeVariable/*.ttf
          out/JetBrainsMonoVariable/*.ttf
        retention-days: 30
    
    - name: Create release archives
      if: github.event_name == 'workflow_dispatch' || github.ref == 'refs/heads/main'
      run: |
        mkdir -p releases
        
        # Create separate zip files for each font family
        if [ -d "out/GoogleSansCodeVariable" ] && [ "$(ls -A out/GoogleSansCodeVariable/*.ttf 2>/dev/null)" ]; then
          cd out/GoogleSansCodeVariable
          zip -r ../../releases/Bon-GoogleSansCode-${{ github.sha }}.zip *.ttf
          cd ../..
        fi
        
        if [ -d "out/JetBrainsMonoVariable" ] && [ "$(ls -A out/JetBrainsMonoVariable/*.ttf 2>/dev/null)" ]; then
          cd out/JetBrainsMonoVariable
          zip -r ../../releases/Bon-JetBrainsMono-${{ github.sha }}.zip *.ttf
          cd ../..
        fi
        
        # Create checksums
        cd releases
        if [ "$(ls -A *.zip 2>/dev/null)" ]; then
          sha256sum *.zip > SHA256SUMS.txt
        fi
        cd ..
    
    - name: Upload release artifacts
      if: github.event_name == 'workflow_dispatch' || github.ref == 'refs/heads/main'
      uses: actions/upload-artifact@v4
      with:
        name: boncode-fonts-release-${{ github.sha }}
        path: |
          releases/*.zip
          releases/SHA256SUMS.txt
        retention-days: 90

  release:
    needs: build
    runs-on: ubuntu-latest
    if: github.event_name == 'workflow_dispatch' && github.ref == 'refs/heads/main'
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
    
    - name: Download release artifacts
      uses: actions/download-artifact@v4
      with:
        name: boncode-fonts-release-${{ github.sha }}
        path: releases/
    
    - name: Get package version
      id: package-version
      run: |
        VERSION=$(node -p "require('./package.json').version")
        echo "version=$VERSION" >> $GITHUB_OUTPUT
    
    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: v${{ steps.package-version.outputs.version }}
        release_name: Bon-Code-Fonts v${{ steps.package-version.outputs.version }}
        body: |
          ## Bon-Code-Fonts v${{ steps.package-version.outputs.version }}
          
          Hybrid fixed-width monospace coding fonts, blended with popular Latin coding fonts and `Bon Gothic - 본고딕`.
          
          ### Available Fonts
          - **Bon-GoogleSansCode**: Google Sans Code + Sarasa Fixed K
          - **Bon-JetBrainsMono**: JetBrains Mono + Sarasa Fixed K
          
          ### Installation
          1. Download the font zip file for your preferred base font
          2. Extract and install the `.ttf` files
          3. Select "Bon Google Sans Code" or "Bon JetBrains Mono" in your coding environment
          
          ### Verification
          SHA256 checksums are provided in `SHA256SUMS.txt`
        draft: false
        prerelease: false
    
    - name: Upload Google Sans Code Release Asset
      if: hashFiles('releases/Bon-GoogleSansCode-*.zip') != ''
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: releases/Bon-GoogleSansCode-${{ github.sha }}.zip
        asset_name: Bon-GoogleSansCode-v${{ steps.package-version.outputs.version }}.zip
        asset_content_type: application/zip
    
    - name: Upload JetBrains Mono Release Asset
      if: hashFiles('releases/Bon-JetBrainsMono-*.zip') != ''
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: releases/Bon-JetBrainsMono-${{ github.sha }}.zip
        asset_name: Bon-JetBrainsMono-v${{ steps.package-version.outputs.version }}.zip
        asset_content_type: application/zip
    
    - name: Upload SHA256 Checksums
      if: hashFiles('releases/SHA256SUMS.txt') != ''
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: releases/SHA256SUMS.txt
        asset_name: SHA256SUMS.txt
        asset_content_type: text/plain
